// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ITIAttendanceSystem.Models;

namespace ITIAttendanceSystem.Data
{
    public partial class ITICOMPSYSDB2Context : DbContext
    {
        public ITICOMPSYSDB2Context()
        {
        }

        public ITICOMPSYSDB2Context(DbContextOptions<ITICOMPSYSDB2Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Attendance> Attendances { get; set; }
        public virtual DbSet<BuildingAffairsStaff> BuildingAffairsStaffs { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Schedule> Schedules { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<buildingAffairsAttendance> buildingAffairsAttendances { get; set; }
        public virtual DbSet<studentPermission> studentPermissions { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=.;Initial Catalog=ITIAttendanceSystem;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Attendance>(entity =>
            {
                entity.HasKey(e => new { e.StudentId, e.AttendanceDate });
            });

            modelBuilder.Entity<Document>(entity =>
            {
                entity.Property(e => e.StudentId).ValueGeneratedNever();
            });

            modelBuilder.Entity<Instructor>(entity =>
            {
                entity.HasIndex(e => e.Id, "IX_Instructors_Id")
                    .IsUnique()
                    .HasFilter("([Id] IS NOT NULL)");
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.HasIndex(e => e.Id, "IX_Students_Id")
                    .IsUnique()
                    .HasFilter("([Id] IS NOT NULL)");
            });

            modelBuilder.Entity<buildingAffairsAttendance>(entity =>
            {
                entity.HasKey(e => new { e.StaffId, e.AttendanceDate, e.ArrivalTime });
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}